// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package gql

type Value interface {
	IsValue()
}

type Account struct {
	Address  string  `json:"address"`
	PubKey   *string `json:"pubKey"`
	Number   string  `json:"number"`
	Sequence string  `json:"sequence"`
	Balance  []*Coin `json:"balance"`
}

type ArrayValue struct {
	Value []Value `json:"value"`
}

func (ArrayValue) IsValue() {}

type Attribute struct {
	Key   string `json:"key"`
	Value Value  `json:"value"`
}

type Auction struct {
	ID             string        `json:"id"`
	Status         string        `json:"status"`
	OwnerAddress   string        `json:"ownerAddress"`
	CreateTime     string        `json:"createTime"`
	CommitsEndTime string        `json:"commitsEndTime"`
	RevealsEndTime string        `json:"revealsEndTime"`
	CommitFee      *Coin         `json:"commitFee"`
	RevealFee      *Coin         `json:"revealFee"`
	MinimumBid     *Coin         `json:"minimumBid"`
	WinnerAddress  string        `json:"winnerAddress"`
	WinnerBid      *Coin         `json:"winnerBid"`
	WinnerPrice    *Coin         `json:"winnerPrice"`
	Bids           []*AuctionBid `json:"bids"`
}

type AuctionBid struct {
	BidderAddress string `json:"bidderAddress"`
	Status        string `json:"status"`
	CommitHash    string `json:"commitHash"`
	CommitTime    string `json:"commitTime"`
	CommitFee     *Coin  `json:"commitFee"`
	RevealTime    string `json:"revealTime"`
	RevealFee     *Coin  `json:"revealFee"`
	BidAmount     *Coin  `json:"bidAmount"`
}

type AuthorityRecord struct {
	OwnerAddress   string   `json:"ownerAddress"`
	OwnerPublicKey string   `json:"ownerPublicKey"`
	Height         string   `json:"height"`
	Status         string   `json:"status"`
	BondID         string   `json:"bondId"`
	ExpiryTime     string   `json:"expiryTime"`
	Auction        *Auction `json:"auction"`
}

type Bond struct {
	ID      string  `json:"id"`
	Owner   string  `json:"owner"`
	Balance []*Coin `json:"balance"`
}

type BooleanValue struct {
	Value bool `json:"value"`
}

func (BooleanValue) IsValue() {}

type BytesValue struct {
	Value string `json:"value"`
}

func (BytesValue) IsValue() {}

type Coin struct {
	Type     string `json:"type"`
	Quantity string `json:"quantity"`
}

type FloatValue struct {
	Value float64 `json:"value"`
}

func (FloatValue) IsValue() {}

type IntValue struct {
	Value int `json:"value"`
}

func (IntValue) IsValue() {}

type KeyValueInput struct {
	Key   string      `json:"key"`
	Value *ValueInput `json:"value"`
}

type LinkValue struct {
	Value Link `json:"value"`
}

func (LinkValue) IsValue() {}

type MapValue struct {
	Value []*Attribute `json:"value"`
}

func (MapValue) IsValue() {}

type NameRecord struct {
	Latest  *NameRecordEntry   `json:"latest"`
	History []*NameRecordEntry `json:"history"`
}

type NameRecordEntry struct {
	ID     string `json:"id"`
	Height string `json:"height"`
}

type NodeInfo struct {
	ID      string `json:"id"`
	Network string `json:"network"`
	Moniker string `json:"moniker"`
}

type OwnerBonds struct {
	Owner string  `json:"owner"`
	Bonds []*Bond `json:"bonds"`
}

type Participant struct {
	CosmosAddress   string `json:"cosmos_address"`
	EthereumAddress string `json:"ethereum_address"`
}

type PeerInfo struct {
	Node       *NodeInfo `json:"node"`
	IsOutbound bool      `json:"is_outbound"`
	RemoteIP   string    `json:"remote_ip"`
}

type Record struct {
	ID         string       `json:"id"`
	Names      []string     `json:"names"`
	BondID     string       `json:"bondId"`
	CreateTime string       `json:"createTime"`
	ExpiryTime string       `json:"expiryTime"`
	Owners     []string     `json:"owners"`
	Attributes []*Attribute `json:"attributes"`
	References []*Record    `json:"references"`
}

type Status struct {
	Version    string           `json:"version"`
	Node       *NodeInfo        `json:"node"`
	Sync       *SyncInfo        `json:"sync"`
	Validator  *ValidatorInfo   `json:"validator"`
	Validators []*ValidatorInfo `json:"validators"`
	NumPeers   string           `json:"num_peers"`
	Peers      []*PeerInfo      `json:"peers"`
	DiskUsage  string           `json:"disk_usage"`
}

type StringValue struct {
	Value string `json:"value"`
}

func (StringValue) IsValue() {}

type SyncInfo struct {
	LatestBlockHash   string `json:"latest_block_hash"`
	LatestBlockHeight string `json:"latest_block_height"`
	LatestBlockTime   string `json:"latest_block_time"`
	CatchingUp        bool   `json:"catching_up"`
}

type ValidatorInfo struct {
	Address          string  `json:"address"`
	VotingPower      string  `json:"voting_power"`
	ProposerPriority *string `json:"proposer_priority"`
}

type ValueInput struct {
	Int     *int             `json:"int"`
	Float   *float64         `json:"float"`
	String  *string          `json:"string"`
	Boolean *bool            `json:"boolean"`
	Link    *Link            `json:"link"`
	Array   []*ValueInput    `json:"array"`
	Map     []*KeyValueInput `json:"map"`
}
